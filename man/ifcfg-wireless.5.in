.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "IFCFG\-WIRELESS" "5" "Jun 15, 2022" "Wicked User Manual" ""
.SH NAME
ifcfg\-wireless \- wireless LAN network interface configuration
.SH SYNOPSIS
\f[CR]/etc/sysconfig/network/ifcfg\-*\f[R]
.SH GENERAL
Wireless networks need some additional configuration data compared to
ethernet ones.
Therefore additional variables for ifcfg files were introduced.
Some wireless variables are not applicable to a single wireless network
but are global to the interface.
The description of the variable points this out.
.SH OPTIONS
.SS Mandatory options:
.TP
\f[CR]WIRELESS_ESSID <string>\f[R]
Set the SSID/ESSID (Network Name) The ESSID is used to identify cells
which are part of the same virtual network.
The format allow the following escape sequences:
.RS
.IP \[bu] 2
\f[CR]\[rs]x[0\-9A\-Fa\-F]{2}\f[R]: define one byte as hex
(\f[CR]\[rs]x0A\f[R] for new line)
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs][0\-9]{1,3}\f[R]: define one byte in oktal
(\f[CR]\[rs]012\f[R] for new line)
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]t\f[R]: translated to tab (\f[CR]\[rs]x09\f[R])
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]n\f[R]: translated to new line (\f[CR]\[rs]x0A\f[R])
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]r\f[R]: translated to carriage return (\f[CR]\[rs]x0D\f[R])
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]e\f[R]: translated to ESC (\f[CR]\[rs]x1B\f[R])
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]\[rs]\f[R]: become single \f[CR]\[rs]\f[R]
.PD 0
.P
.PD
.IP \[bu] 2
\f[CR]\[rs]\[dq]\f[R]: become single \f[CR]\[dq]\f[R]
.RE
.SS Global wireless options:
.TP
\f[CR]WIRELESS <bool>\f[R]
Enable or disable wireless for this configuration.
If not given wireless will be enabled, if one of
\f[B]WIRELESS_ESSID\f[R], \f[B]WIRELESS_AP_SCANMODE\f[R] or
\f[B]WIRELESS_WPA_DRIVER\f[R] is given.
.TP
\f[CR]WIRELESS_AP_SCANMODE <0|1|2>\f[R]
Defines which SSID scan mode should be used.
Mode 0 means the driver performs the scan.
Mode 1 means wpa_supplicant takes care of scanning.
Mode 2 is basically the same as mode 0 but the access point gets chosen
by security policy and SSID.
This mode does not support multiple network settings.
Default is \[lq]1\[rq] for most drivers.
This variable can have no suffix.
This set the wpa_supplicant variable \f[CR]ap_scan\f[R].
.TP
\f[CR]WIRELESS_WPA_DRIVER <string>\f[R]
This variable allows to override the wpa driver name that should be used
by the wpa_supplicant.
Default is \[lq]nl80211,wext\[rq].
.SS Wireless network configuration options:
.TP
\f[CR]WIRELESS_AUTH_MODE <OPEN|SHARED|PSK|EAP>\f[R]
Sets authentication mode.
The mode depends on the protection technology being used.
\f[B]shared\f[R] key authentication makes it easier for a potential
attacker to break into your network.
Unless you have specific needs for shared key authentication, use the
\f[B]open\f[R] mode.
As WEP has been proved insecure, WPA (Wi\-Fi Protected Access) was
defined to close its security wholes.
The values \f[B]PSK\f[R] and \f[B]EAP\f[R] are \f[I]deprecated\f[R], use
\f[B]WIRELESS_WPA_PSK\f[R] or \f[B]WIRELESS_EAP_MODE\f[R] instead.
For specific key management protocol, consider the variable
\f[B]WIRELESS_KEY_MGMT\f[R].
.TP
\f[CR]WIRELESS_KEY_MGMT <WPA\-EAP|WPA\-PSK|SAE|WPA\-EAP\-SUITE\-B\-192|...>\f[R]
Set the list of accepted authenticated key management protocols.
When unset, wicked is using all protocols reported as device
capabilities and filtered by PSK or EAP depending on further
configuration variables.
.RS
.IP \[bu] 2
PSK key management protocols (require \f[B]WIRELESS_WPA_PSK\f[R]):
.PD 0
.P
.PD
.RS 2
.IP \[bu] 2
\f[B]WPA\-PSK\f[R]: WPA pre\-shared key
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]FT\-PSK\f[R]: Fast BSS Transition (IEEE 802.11r) with pre\-shared
key
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]WPA\-PSK\-SHA256\f[R]: Like WPA\-PSK but using stronger
SHA256\-based algorithms
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]SAE\f[R]: Simultaneous authentication of equals
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]FT\-SAE\f[R]: SAE with FT
.RE
.IP \[bu] 2
EAP key management protocols (require \f[B]WIRELESS_EAP_MODE\f[R]):
.PD 0
.P
.PD
.RS 2
.IP \[bu] 2
\f[B]WPA\-EAP\f[R]: WPA using EAP authentication
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]WPA\-EAP\-SHA256\f[R]: Like WPA\-EAP but using stronger
SHA256\-based algorithms
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]WPA\-EAP\-SUITE\-B\f[R]: Suite B 128\-bit level
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]WPA\-EAP\-SUITE\-B\-192\f[R]: Suite B 192\-bit level
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]FT\-EAP\f[R]: Fast BSS Transition (IEEE 802.11r) with EAP
authentication
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]FT\-EAP\-SHA384\f[R]: Fast BSS Transition (IEEE 802.11r) with EAP
authentication and using SHA384
.RE
.IP \[bu] 2
OPEN network key management protocols:
.PD 0
.P
.PD
.RS 2
.IP \[bu] 2
\f[B]NONE\f[R]: WPA is not used; plaintext or static WEP could be used
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]OWE\f[R]: Opportunistic Wireless Encryption (a.k.a.
Enhanced Open)
.RE
.RE
.TP
\f[CR]WIRELESS_MODE <MANAGED|AD\-HOC|MASTER>\f[R]
Set the operating mode of the device, which depends on the network
topology.
Set to ad\-hoc for network composed of only one cell and without Access
Point, managed for network composed of many cells, with roaming or with
an Access Point, master if you want your system act as an Access Point
or synchronisation master.
Default is \f[B]managed\f[R]..
.TP
\f[CR]WIRELESS_AP <address>\f[R]
In environments with multiple Access points you may want to define the
one to connect to by entering its MAC address.
Format is 6x2 hex digits, separated by colons, e.g.\ 01:02:03:04:05:06.
.TP
\f[CR]WIRELESS_PRIORITY <num>\f[R]
This variable only makes sense used in conjunction with multiple
networks.
If you want to prefer one configured network for over another, set the
respective WIRELESS_PRIORITY variable (means, with the same suffix) to a
higher value (integer only).
.TP
\f[CR]WIRELESS_CHANNEL <num>\f[R]
With this variable you can define the channel being used.
This is only applicable to ad\-hoc and master operating modes.
Channels are usually numbered starting at 1, and you may use iwpriv(8)
to get the total number of channels and list the available frequencies.
Depending on regulations, some frequencies/channels may not be
available.
.TP
\f[CR]WIRELESS_FREQUENCY_LIST <num|frequency\-set>\f[R]
In station mode, this space\-separated list restricts the frequencies
(in MHz) to search for the BSS (Access\-Point with ESSID).
Additionally, the following predefined frequency set names can be used
to specify frequency ranges:
.RS
.IP \[bu] 2
\f[B]2.4Ghz\f[R]: 2412\-2484 Mhz
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]5Ghz\f[R]: 4920\-5885 Mhz
.PD 0
.P
.PD
.IP \[bu] 2
\f[B]6Ghz\f[R]: 5935\-7115 Mhz
.RE
.TP
\f[CR]WIRELESS_KEY_[0123] <string|hex>\f[R]
You can define up to 4 WEP encryption keys.
You can use WEP with open and sharedkey authentication.
The key can be entered in as ASCII string, where char represent one byte
of the key, thus the length must match 5, 13 or 16.
Or you can specify the key in hex digits.
.RS
.PP
Note: for backward compatibility a prefix \[lq]h:\[rq] or characters
like \[lq]\-\[rq] or \[lq]:\[rq] get removed from the hex\-string.
.PP
Examples:
.IP
.EX
WIRELESS_KEY_0=\[dq]01020304ff\[dq]
WIRELESS_KEY_0\-\[dq]s:hello\[dq]
.EE
.RE
.TP
\f[CR]WIRELESS_DEFAULT_KEY <num>\f[R]
Sets the default WEP key.
The default key is used to encrypt outgoing packets, incoming ones are
decrypted with the key number specified in the packet.
This defaults to 0.
.TP
\f[CR]WIRELESS_WPA_PROTO <WPA|RSN>\f[R]
Using this variable you can specify the WPA protocol to be used.
Valid values are WPA and RSN (aka WPA2).
Multiple values are allowed.
Default is both.
.TP
\f[CR]WIRELESS_WPA_PSK <string|hex>\f[R]
When using WPA\-PSK authentication, you need to specify your pre shared
key here.
The key is used for authentication and encryption purposes.
You can enter it in hex digits (needs to be exactly 64 digits long) or
as passphrase getting hashed (8 to 63 ASCII characters long).
.TP
\f[CR]WIRELESS_CIPHER_PAIRWISE <TKIP|CCMP>\f[R]
WPA modes support two different encryption systems, TKIP and CCMP.
This variable defines which to use for unicast communication.
Default is to allow both.
In case you want to restrict it to one protocol, set this variable.
.TP
\f[CR]WIRELESS_CIPHER_GROUP <TKIP|CCMP|WEP104|WEP40>\f[R]
WPA modes support two different encryption systems, TKIP and CCMP.
This variable defines which to use for broad\-/multicast communication.
Default is to allow both.
In case you want to restrict it to one protocol, set this variable.
.TP
\f[CR]WIRELESS_EAP_MODE <TLS|PEAP|TTLS|...>\f[R]
Use this variable to specify the outer WPA\-EAP authentication methods.
.TP
\f[CR]WIRELESS_EAP_AUTH <PAP|CHAP|MSCHAP|MSCHAPv2|...>\f[R]
Use this variable to specify the inner WPA\-EAP authentication methods.
.TP
\f[CR]WIRELESS_WPA_IDENTITY <string>\f[R]
Identity string for WPA\-EAP as configured on the RADIUS server.
.TP
\f[CR]WIRELESS_WPA_PASSWORD <string>\f[R]
Needs to be set in conjunction with WPA\-EAP.
Set to your password as configured on the RADIUS server.
.TP
\f[CR]WIRELESS_WPA_ANONID <name>\f[R]
Sets anonymous identity.
Default is \[lq]anonymous\[rq].
The anonymous identity is used with WPA\-EAP protocols that support
different tunnelled identities (e.g., TTLS).
.TP
\f[CR]WIRELESS_PEAP_VERSION <0|1>\f[R]
When using WPA\-EAP with PEAP authentication, you can use this variable
to force which PEAP version (0 or 1) to be used.
Default is to allow both.
.TP
\f[CR]WIRELESS_PEAP_LABEL <string>\f[R]
When set to 1 the new label: \[lq]client PEAP encryption\[rq] can be
enforced to be used during key derivation with version PEAPv1 or newer.
Most existing PEAPv1 implementation tend to use the old label,
\[lq]client EAP encryption\[rq], which is the default value for
wpa_supplicant.
Default value is 0.
.TP
\f[CR]WIRELESS_CA_CERT <string>\f[R]
CA certificate for Interworking network selection.
The file path can be specified relative to the ifcfg file or absolute.
.TP
\f[CR]WIRELESS_CLIENT_CERT <string>\f[R]
File path to client certificate file (PEM/DER).
It is used with WPA\-EAP where a client certificate/private key is used
for authentication (EAP\-TLS).
.TP
\f[CR]WIRELESS_CLIENT_KEY <string>\f[R]
File path to client private key file (PEM/DER/PFX).
If the key is encrypted, specify the
\f[B]WIRELESS_CLIENT_KEY_PASSWORD\f[R].
.TP
\f[CR]WIRELESS_HIDDEN_SSID <NO|YES>\f[R]
Set to \[lq]yes\[rq] if you try to connect to a hidden network.
The probe request frames will be specific to the configured ESSID.
.TP
\f[CR]WIRELESS_FRAG <num>\f[R]
Maximum EAP fragment size in bytes (default 1398).
This value limits the fragment size for EAP methods that support
fragmentation (e.g., EAP\-TLS and EAP\-PEAP).
This value should be set small enough to make the EAP messages fit in
MTU of the network interface used for EAPOL.
The default value is suitable for most cases.
.TP
\f[CR]WIRELESS_PMF <disabled|optional|required>\f[R]
Whether \f[B]P\f[R]rotected \f[B]M\f[R]anagement \f[B]F\f[R]rames are
enabled or not.
Default is \f[B]disabled\f[R].
.SH EXAMPLE
Some examples of different configuration types supported at the moment:
.SS Common parameters
.IP
.EX
    BOOTPROTO=\[aq]dhcp\[aq]
    NAME=\[aq]PRO/Wireless 4965 AG or AGN [Kedron] Network Connection\[aq]
    STARTMODE=\[aq]auto\[aq]
.EE
.SS Global wireless parameters
.IP
.EX
    WIRELESS_AP_SCANMODE=\[aq]1\[aq]
    WIRELESS_WPA_DRIVER=\[aq]nl80211,wext\[aq]
.EE
.SS Scan only wireless configuration
.IP
.EX
    STARTMODE=\[aq]manual\[aq]
    BOOTPROTO=\[aq]none\[aq]
    WIRELESS=\[aq]yes\[aq]
    # scan only, don\[aq]t expect established connection:
    LINK_REQUIRED=no
.EE
.IP
.EX
The scan results are listed in <wireless/scan\-results/bss> node of
the \[ga]wicked show\-xml [ifname]\[ga] output.
To show all visible SSIDs and KEY\-MGMTs, you can use e.g.:
.EE
.IP
.EX
    wicked show\-xml wlan0 | wicked xpath \-\-reference \[aq]object/wireless/scan\-results/bss\[aq] \[aq]ssid=\[dq]%{ssid}\[dq] key\-mgmt=\[dq]%{?rsn/key\-management} %{?wpa/key\-management}\[dq]\[aq]
.EE
.SS Open network configuration
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
.EE
.SS WPA\-PSK
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_WPA_PSK=\[aq]example_passwd\[aq]
.EE
.SS WPA\-PSK (WPA1 only)
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_WPA_PSK=\[aq]example_passwd\[aq]
    WIRELESS_KEY_MGMT=\[aq]WPA\-PSK\[aq]
    WIRELESS_CIPHER_PAIRWISE=\[aq]TKIP\[aq]
    WIRELESS_CIPHER_GROUP=\[aq]TKIP\[aq]
.EE
.SS WPA\-PSK (WPA2 only)
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_WPA_PSK=\[aq]example_passwd\[aq]
    WIRELESS_KEY_MGMT=\[aq]WPA\-PSK\[aq]
    WIRELESS_CIPHER_PAIRWISE=\[aq]CCMP\[aq]
    WIRELESS_CIPHER_GROUP=\[aq]CCMP\[aq]
.EE
.SS WPA\-PSK (WPA3 only)
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_WPA_PSK=\[aq]example_passwd\[aq]
    WIRELESS_KEY_MGMT=\[aq]SAE\[aq]
    WIRELESS_PMF=\[aq]required\[aq]
    WIRELESS_CIPHER_PAIRWISE=\[aq]CCMP\[aq]
    WIRELESS_CIPHER_GROUP=\[aq]CCMP\[aq]
.EE
.SS WPA\-PSK (WPA2 and WPA3 transition)
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_WPA_PSK=\[aq]example_passwd\[aq]
    WIRELESS_KEY_MGMT=\[aq]WPA\-PSK WPA\-PSK\-SHA256 SAE\[aq]
    WIRELESS_PMF=\[aq]optional\[aq]
    WIRELESS_CIPHER_PAIRWISE=\[aq]CCMP\[aq]
    WIRELESS_CIPHER_GROUP=\[aq]CCMP\[aq]
.EE
.SS WPA\-EAP/PEAP/MSCHAPv2 network configuration
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_EAP_MODE=\[aq]PEAP\[aq]
    WIRELESS_EAP_AUTH=\[aq]MSCHAPv2\[aq]
    WIRELESS_WPA_IDENTITY=\[aq]bob\[aq]
    WIRELESS_WPA_PASSWORD=\[aq]example_password\[aq]
    WIRELESS_CA_CERT=\[aq]/path/to/my/ca_cert.pem\[aq]
.EE
.SS WPA\-EAP/TTLS/PAP network configuration**
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_EAP_MODE=\[aq]TTLS\[aq]
    WIRELESS_EAP_AUTH=\[aq]PAP\[aq]
    WIRELESS_WPA_IDENTITY=\[aq]bob\[aq]
    WIRELESS_WPA_PASSWORD=\[aq]example_passwd\[aq]
    WIRELESS_CA_CERT=\[aq]/path/to/my/ca_cert.pem\[aq]
.EE
.SS WPA\-EAP/TLS network configuration
.IP
.EX
    WIRELESS_ESSID=\[aq]example_ssid\[aq]
    WIRELESS_EAP_MODE=\[aq]TLS\[aq]
    WIRELESS_WPA_IDENTITY=\[aq]bob\[aq]
    WIRELESS_CLIENT_CERT=\[aq]/path/to/my/client.crt\[aq]
    WIRELESS_CA_CERT=\[aq]/path/to/my/ca_cert.pem\[aq]
.EE
.SS WEP network configuration \[en] insecure!
.IP
.EX
    WIRELESS_AUTH_MODE=\[aq]shared\[aq]
    WIRELESS_KEY_0=\[dq]s:hallo\[dq]
    WIRELESS_KEY_1=\[dq]01020304050607080900010203\[dq]
.EE
.SS Multiple network configuration
.IP
.EX
    WIRELESS_ESSID=\[aq]example_open_ssid\[aq]

    WIRELESS_ESSID_1=\[aq]super_secure\[aq]
    WIRELESS_PRIORITY_1=\[aq]10\[aq]
    WIRELESS_EAP_MODE_1=\[aq]TLS\[aq]
    WIRELESS_WPA_IDENTITY_1=\[aq]bob\[aq]
    WIRELESS_CA_CERT_1=\[aq]/path/to/my/ca_cert.pem\[aq]
    WIRELESS_CLIENT_CERT_1=\[aq]/path/to/my/client.crt\[aq]
    WIRELESS_CLIENT_KEY_1=\[aq]/path/to/my/client.key\[aq]

    WIRELESS_ESSID_2=\[aq]example_psk_ssid\[aq]
    WIRELESS_WPA_PSK_2=\[aq]example_passwd\[aq]

    WIRELESS_ESSID_3=\[aq]home_wifi_5G\[aq]
    WIRELESS_WPA_PSK_3=\[aq]example_passwd\[aq]
    WIRELESS_PRIORITY_3=\[aq]5\[aq]
    WIRELESS_WPA_PROTO_3=\[aq]RSN\[aq]
    WIRELESS_CIPHER_PAIRWISE_3=\[aq]CCMP\[aq]
    WIRELESS_CIPHER_GROUP_3=\[aq]TKIP,CCMP\[aq]
.EE
.SH COPYRIGHT
Copyright (C) 2014\-2022 SUSE LLC
.SH BUGS
Please report bugs as described at <@PACKAGE_BUGREPORT@>
.SH SEE ALSO
\f[B]\f[CB]routes\f[B]\f[R](5), \f[B]\f[CB]ifcfg\f[B]\f[R](5),
\f[B]\f[CB]wicked\f[B]\f[R](8)
.SH AUTHORS
Joachim Gleissner \[en] original wireless man page, Pawel
Wieczorkiewicz, Clemens Famulla\-Conrad.
