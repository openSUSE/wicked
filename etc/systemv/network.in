#!/bin/bash
#
# Network interface configuration
#
# Copyright (c) 2001-2002 SuSE Linux AG, Nuernberg, Germany.
# Copyright (c) 2003-2013 SÜSE LINUX Products GmbH, Nuernberg, Germany.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# Author: Michal Svec <msvec@suse.cz>
#         Christian Zoz <zoz@suse.de>
#         Mads Martin Jørgensen <mmj@suse.de>
#         Marius Tomaschewski <mt@suse.de>
#         Olaf Kirch <okir@suse.de>
#
# /etc/init.d/network
#
### BEGIN INIT INFO
# Provides:		network
# Required-Start:	$local_fs wickedd
# Should-Start:		isdn openibd SuSEfirewall2_init
# Required-Stop:	$local_fs wickedd
# Should-Stop:		isdn openibd SuSEfirewall2_init
# Default-Start:	3 5
# Default-Stop:		
# X-Systemd-RemainAfterExit: true
# Short-Description:	Configure network interfaces
# Description:		Configure network interfaces and set up routing
### END INIT INFO

WICKED_CLIENT_BIN=@wicked_sbindir@/wicked

. /etc/rc.status
rc_reset

if test -f /etc/sysconfig/network/config ; then
	 . /etc/sysconfig/network/config
else
	echo -n "Network: file /etc/sysconfig/network/config is missing."
	rc_failed
	rc_status -v
	rc_exit
fi

# TODO: The 'onboot' mode caused to wait until interfaces are
#       set up. Under systemd, it were always active because
#       systemd does not call 'status' action but is using the
#       return code... Also all users and yast2 expects, that
#       when the network script finished, interface are up.
#       So basically, this is either obsolete or needs do be
#       handled correctly. For now, it's IMO safer to wait.
#       Local-fs vs. remote-fs is gone, /usr on nfs is mounted
#       by the initrd since SLE-11-SP2 / 12.x at least.
#
# Only use ifup option 'onboot' if booting or changing runlevel
# Therefore we check if we were called from init
MODE="onboot"
BOOT_STAGE=""
#if [ -n "$INIT_VERSION" -a -z "$YAST_IS_RUNNING" ] ; then
#	MODE=onboot
#	BOOT_STAGE=localfs
#fi

######################################################################
# Command line parsing
#
SCRIPTNAME=${0##*/}
#debug $*

ACTION=$1; shift

if [ "$1" != "-o" ] ; then
	INTERFACE=$1; shift
fi

if [ -n "$1" -a "$1" != "-o" ] ; then
	CONFIG=$INTERFACE; INTERFACE=$1; shift;
fi

test "$1" = "-o" && shift
OPTIONS=$@

while [ $# -gt 0 ]; do
	case $1 in
		boot|onboot) MODE=onboot ;;
		manual)      MODE=manual ;;
		debug)       DEBUG=yes ;;
		fake)        FAKE=echo ;;
		type=*)      : TYPE=${1#type=} ;;
		skip=*)      : SKIP=${1#skip=} ;;
		localfs)     : BOOT_STAGE=localfs  ;;
		remotefs)    : BOOT_STAGE=remotefs ;;
		*)
			mesg "Unknown option '$1'"
			mesg "options: {[on]boot,manual,debug,type=<typelist>,skip=<skip list>,fake}"
			exit 1
		;;
	esac
	shift
done

case $ACTION in
start)
	IFUP_ARGS=""
	if [ "$MODE" = "onboot" ]; then
		IFUP_ARGS+=" --mode boot"
	fi
	#if [ -n "$BOOT_STAGE" ]; then
	#	IFUP_ARGS+=" --boot-stage $BOOT_STAGE"
	#fi

	# FIXME: remove it
	ulimit -c unlimited

	$FAKE $WICKED_CLIENT_BIN ifup $IFUP_ARGS all

	rc_status -v
	;;

stop)
	$FAKE $WICKED_CLIENT_BIN ifdown all
	rc_status -v
	;;

try-restart|condrestart)
	$0 status
	if test $? = 0; then
		$0 restart
	else
		rc_reset        # Not running is not a failure.
	fi
	rc_status
	;;

restart)
	$0 stop
	$0 start
	rc_status
	;;

force-reload)
	echo -n "Reload service network"
	$0 try-restart
	rc_status
	;;

reload)
	$FAKE $WICKED_CLIENT_BIN ifreload all
	rc_status -v
	;;

status)
	echo "Checking for service network:"
	$FAKE $WICKED_CLIENT_BIN ifstatus --brief all
	echo -n "Status of service network "
	rc_status -v
	;;

probe)
	## Optional / not part of LSB: Probe for the necessity of a reload,
	## print out the argument to this init script which is required for
	## a reload (or restart when reload not supported).
	$FAKE $WICKED_CLIENT_BIN ifcheck --changed --quiet all \
		&>/dev/null || echo reload
	;;

*)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;

esac
